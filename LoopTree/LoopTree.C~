#include <TFile.h>
#include <TTree.h>
#include <TH1I.h>
#include <TH2I.h>
#include <TCanvas.h>

#include <iostream>
#include <fstream>
#include <string>
#include <stdio.h>
#include <stdlib.h>

void LoopTree(string inName="out.root", long long Nmax= -1){

  TFile *input_file;
  input_file = new TFile(inName.data(),"read");
  cout << "Opened file " << runName << endl;
    
  //read tree from file
  TTree *tree;
  tree= (TTree*) input_file->Get("data");
  tree->Print();

  //variables to load information of tree
  double X[2];
  double Y[2];
  int entry;

  tree->SetMakeClass(1);  

  tree->SetBranchAddress("x",X,0);
  tree->SetBranchStatus("x",1);
  tree->SetBranchAddress("y",Y,0);
  tree->SetBranchStatus("y",1);
  tree->SetBranchAddress("n",&entry,0);
  tree->SetBranchStatus("n",1);

  //number of data points in TTree
  long long n_entries;

  n_entries = tree->GetEntries();
  cout << "\nNumber of entries in input tree= " << n_entries << endl;

  
  if(Nmax>0 && n_entries > Nmax) n_entries= Nmax;

  cout << "\nLooping over " << n_entries << " entries." << endl;


  bool b_break= false;

  int flg, Ni, Nd, Nch;

  int rng, pln;

  //now looping only over first 99 events, or up to n_entries, whatever is less
  //   for(long long i=0; i<NloopD; i++){
  for(long long i=0; i<n_entries;i++){




}
